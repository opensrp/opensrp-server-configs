sms.can.be.sent=false
number.of.audit.messages=1000

multimedia.directory.name=/opt/multimedia

# OpenMRS configuration
openmrs.url=http://localhost:8080/openmrs/
openmrs.username=admin
openmrs.password=Admin123
openmrs.idgen.url=/module/idgen/exportIdentifiers.form
openmrs.idgen.initial.batchsize=300000
openmrs.idgen.batchsize=100
openmrs.idgen.idsource=1
openmrs.version=2.1.3
#supported versions 1.11x and 2x

dhis2.url=http://dhis2.mpower-social.com:8080/api/
dhis2.username=path 
dhis2.password=Path@123
dhis2.opensrp.location=false
# make REST calls and push data while testing on the server specified above
openmrs.test.make-rest-call=false

openmrs.scheduletracker.syncer.interval-min=2

#database configuration that is not likely to change unless massive refactoring are in build/maven.properties

#couchdb properties
couchdb.server=localhost
couchdb.port=5984
couchdb.username=rootuser
couchdb.password=adminpass

couchdb.atomfeed-db.revision-limit=2

#RapidPro settings
rapidpro.url=https://rapidpro.ona.io
rapidpro.token=YOUR_AUTH_TOKEN
rapidpro.project=zeir
rapidpro.listener.cron.schedule=0 0/5 * * * *

#files upload
file.maxUploadSize=20971520

#CORS allowed source domain
opensrp.cors.allowed.source=""
opensrp.cors.max.age=60

#search for missing clients
opensrp.sync.search.missing.client=false

#duration in seconds to cache authetication time to live
opensrp.authencation.cache.ttl=600

#redis settings
redis.host=localhost
redis.port=6379
redis.password=RedI$P@S5
redis.pool.max.connections=25
redis.architecture=standalone
redis.master=mymaster
redis.sentinels=

#Team module settings
use.opensrp.team.module=false

# Object storage configuration (should be populated for deployments using object storage multimedia storage)
object.storage.access.key.id=dummy
object.storage.secret.access.key=dummy
object.storage.region=dummy
object.storage.bucket.name=dummy
object.storage.bucket.folder.path=dummy

# multimedia file manager (is file system by default)
multimedia.file.manager=FileSystemMultimediaFileManager

#Schedules Configuration
schedule.event.add.serverVersion.interval=180000
schedule.view.add.serverVersion.interval=120000
schedule.task.add.serverVersion.interval=120000
schedule.location.add.serverVersion.interval=120000

# run report generation on the 5th at 2am
schedule.report.generate.cron=0 0 2 5 * *

schedule.openmrs.sync.interval=300000
schedule.openmrs.validate.interval=420000
schedule.dhis2.sync.interval=600000

#Allowed MIME Types
multimedia.allowed.file.types=application/octet-stream,image/jpeg,image/gif,image/png


#keycloak
keycloak.configuration.endpoint={0}realms/{1}/.well-known/openid-configuration
keycloak.password.reset.endpoint={0}realms/{1}/account/credentials/password
keycloak.users.endpoint={0}/admin/realms/{1}/users

#Global unique ID settings
opensrp.config.global_id=ZEIR_ID

plan.evaluation.enabled=false

#RabbitMQ settings
rabbitmq.host=localhost
rabbitmq.virtualhost=/
rabbitmq.port=5672
rabbitmq.username=guest
rabbitmq.password=guest
rabbitmq.exchange=rabbitmq.exchange
rabbitmq.queue=rabbitmq.task.queue
rabbitmq.routingkey=rabbitmq.routingkey
rabbitmq.reply.timeout=60000
rabbitmq.concurrent.consumers=1
rabbitmq.max.concurrent.consumers=1

#Sentry Config
sentry.dsn=
sentry.release=
sentry.environment=
sentry.tags={}
sentry.minimumEventLevel=error
sentry.minimumBreadcrumbLevel=info

health.endpoint.openmrs.connectionTimeout=
health.endpoint.openmrs.readTimeout=

health.endpoint.postgres.queryTimeout=

health.endpoint.keycloak.connectionTimeout=
health.endpoint.keycloak.readTimeout=

# Run case triggered plan generation every 5 minutes
schedule.plan.generate.cron = 0 0/5 * * * *

metrics.tags={}
metrics.health_check_updater.cron=0 0/1 * * * *
metrics.additional_ip_allowed=
metrics.include=all
metrics.exclude=
metrics.permitAll=false

# For load testing you might want to increase
thread.pool.core.size=50
thread.pool.max.size=100
thread.pool.queue.capacity=250
